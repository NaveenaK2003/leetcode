Given two strings s and p, return an array of all the start indices of p's 
anagrams
 in s. You may return the answer in any order.

 

Example 1:

Input: s = "cbaebabacd", p = "abc"
Output: [0,6]
Explanation:
The substring with start index = 0 is "cba", which is an anagram of "abc".
The substring with start index = 6 is "bac", which is an anagram of "abc".


Solution:


class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        List<Integer> list=new ArrayList<>();
        if(p.length()>s.length())
        return list;
        int[] pList=new int[26];
        int[] sList=new int[26];
        for(int i=0;i<p.length();i++){
            pList[p.charAt(i)-'a']++;
            sList[s.charAt(i)-'a']++;
        }
        if(Arrays.equals(pList,sList)){
            list.add(0);
        }
        int i=0;
        int j=p.length();
        while(j<s.length()){
            sList[s.charAt(i++)-'a']--;
            sList[s.charAt(j++)-'a']++;
            if(Arrays.equals(sList,pList)){
                list.add(i);
            }
        }
        return list;
    }
}